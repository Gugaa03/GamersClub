{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/guga0/Gamersclub/gamersclub-frontend/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,IAAA,iKAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/guga0/Gamersclub/gamersclub-frontend/components/Navbar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\nimport { supabase } from \"@/lib/supabaseClient\";\r\n\r\ninterface User {\r\n  id: string;           // UUID do Supabase\r\n  name: string;\r\n  email: string;\r\n  balance: number;\r\n  nickname?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (userData: User) => void;\r\n  logout: () => void;\r\n  addFunds: (amount: number) => Promise<void>;\r\n  refreshBalance: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  addFunds: async () => {},\r\n  refreshBalance: async () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  // Restaurar sess√£o do localStorage\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem(\"user\");\r\n    if (savedUser) {\r\n      const parsed = JSON.parse(savedUser);\r\n      setUser(parsed);\r\n    }\r\n  }, []);\r\n\r\n  // Fun√ß√£o de login\r\n  const login = (userData: User) => {\r\n    setUser(userData);\r\n    localStorage.setItem(\"user\", JSON.stringify(userData));\r\n  };\r\n\r\n  // Fun√ß√£o de logout\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  // Atualiza o balance do usu√°rio a partir do Supabase\r\n  const refreshBalance = async () => {\r\n    if (!user?.id) return;\r\n\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"balance\")\r\n        .eq(\"id\", user.id)\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error(\"‚ùå Erro ao buscar saldo:\", error);\r\n        return;\r\n      }\r\n\r\n      if (data && typeof data.balance === \"number\") {\r\n        const updatedUser = { ...user, balance: data.balance };\r\n        setUser(updatedUser);\r\n        localStorage.setItem(\"user\", JSON.stringify(updatedUser));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"‚ùå Erro ao atualizar saldo do usu√°rio:\", err);\r\n    }\r\n  };\r\n\r\n  // Fun√ß√£o de adicionar fundos\r\n  const addFunds = async (amount: number) => {\r\n    if (!user?.id) return alert(\"Usu√°rio n√£o definido ou sem ID!\");\r\n\r\n    const newBalance = (user.balance || 0) + amount;\r\n\r\n    try {\r\n      const { error } = await supabase\r\n        .from(\"users\")\r\n        .update({ balance: newBalance })\r\n        .eq(\"id\", user.id);\r\n\r\n      if (error) throw error;\r\n\r\n      const updatedUser = { ...user, balance: newBalance };\r\n      setUser(updatedUser);\r\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\r\n\r\n      console.log(`üíµ Fundos adicionados: ‚Ç¨${amount.toFixed(2)}. Novo saldo: ‚Ç¨${newBalance.toFixed(2)}`);\r\n    } catch (err) {\r\n      console.error(\"‚ùå Erro ao adicionar fundos:\", err);\r\n      alert(\"Erro ao atualizar saldo no Supabase.\");\r\n    }\r\n  };\r\n\r\n  // Sempre que o usu√°rio muda, atualizamos o balance do Supabase\r\n  useEffect(() => {\r\n    if (user?.id) {\r\n      refreshBalance();\r\n    }\r\n  }, [user?.id]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, addFunds, refreshBalance }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAHA;;;;AAqBA,MAAM,4BAAc,IAAA,oHAAa,EAAkB;IACjD,MAAM;IACN,OAAO,KAAO;IACd,QAAQ,KAAO;IACf,UAAU,WAAa;IACvB,gBAAgB,WAAa;AAC/B;AAEO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAc;IAE9C,mCAAmC;IACnC,IAAA,gHAAS,EAAC;QACR,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACb,MAAM,SAAS,KAAK,KAAK,CAAC;YAC1B,QAAQ;QACV;IACF,GAAG,EAAE;IAEL,kBAAkB;IAClB,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C;IAEA,mBAAmB;IACnB,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qDAAqD;IACrD,MAAM,iBAAiB;QACrB,IAAI,CAAC,MAAM,IAAI;QAEf,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,0HAAQ,CACnC,IAAI,CAAC,SACL,MAAM,CAAC,WACP,EAAE,CAAC,MAAM,KAAK,EAAE,EAChB,MAAM;YAET,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,2BAA2B;gBACzC;YACF;YAEA,IAAI,QAAQ,OAAO,KAAK,OAAO,KAAK,UAAU;gBAC5C,MAAM,cAAc;oBAAE,GAAG,IAAI;oBAAE,SAAS,KAAK,OAAO;gBAAC;gBACrD,QAAQ;gBACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAC9C;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,yCAAyC;QACzD;IACF;IAEA,6BAA6B;IAC7B,MAAM,WAAW,OAAO;QACtB,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM;QAE5B,MAAM,aAAa,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI;QAEzC,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0HAAQ,CAC7B,IAAI,CAAC,SACL,MAAM,CAAC;gBAAE,SAAS;YAAW,GAC7B,EAAE,CAAC,MAAM,KAAK,EAAE;YAEnB,IAAI,OAAO,MAAM;YAEjB,MAAM,cAAc;gBAAE,GAAG,IAAI;gBAAE,SAAS;YAAW;YACnD,QAAQ;YACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAE5C,QAAQ,GAAG,CAAC,CAAC,wBAAwB,EAAE,OAAO,OAAO,CAAC,GAAG,eAAe,EAAE,WAAW,OAAO,CAAC,IAAI;QACnG,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,MAAM;QACR;IACF;IAEA,+DAA+D;IAC/D,IAAA,gHAAS,EAAC;QACR,IAAI,MAAM,IAAI;YACZ;QACF;IACF,GAAG;QAAC,MAAM;KAAG;IAEb,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;YAAQ;YAAU;QAAe;kBAC1E;;;;;;AAGP;AAEO,MAAM,UAAU,IAAM,IAAA,iHAAU,EAAC","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/guga0/Gamersclub/gamersclub-frontend/lib/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\nimport { supabase } from \"@/lib/supabaseClient\";\r\n\r\ninterface User {\r\n  id?: string; // UUID do Supabase\r\n  name: string;\r\n  email: string;\r\n  balance?: number;\r\n}\r\n\r\ninterface AuthContextType {\r\n  id: string | undefined;\r\n  user: User | null;\r\n  login: (userData: User) => void;\r\n  logout: () => void;\r\n  addFunds: (amount: number) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  addFunds: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem(\"user\");\r\n    console.log(\"üîπ Tentando restaurar sess√£o...\");\r\n    if (savedUser) {\r\n      const parsed = JSON.parse(savedUser);\r\n      console.log(\"üîπ Sess√£o restaurada:\", parsed);\r\n      setUser(parsed);\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData: User) => {\r\n    console.log(\"‚úÖ Login chamado com dados:\", userData);\r\n    setUser(userData);\r\n    localStorage.setItem(\"user\", JSON.stringify(userData));\r\n  };\r\n\r\n  const logout = () => {\r\n    console.log(\"üîπ Logout chamado\");\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  const addFunds = async (amount: number) => {\r\n    console.log(\"üí∞ Tentando adicionar fundos:\", amount);\r\n    console.log(\"üßæ Usu√°rio atual:\", user);\r\n\r\n    if (!user) {\r\n      console.error(\"‚ùå Usu√°rio n√£o definido!\");\r\n      return alert(\"Usu√°rio n√£o definido.\");\r\n    }\r\n\r\n    if (!user.id) {\r\n      console.error(\"‚ùå Usu√°rio n√£o tem ID definido! N√£o √© poss√≠vel atualizar no Supabase.\");\r\n      return alert(\"Usu√°rio sem ID. Login incorreto ou n√£o sincronizado com o Supabase.\");\r\n    }\r\n\r\n    const newBalance = (user.balance || 0) + amount;\r\n\r\n    try {\r\n      const { error } = await supabase\r\n        .from(\"users\")\r\n        .update({ balance: newBalance })\r\n        .eq(\"id\", user.id);\r\n\r\n      if (error) throw error;\r\n\r\n      const updatedUser = { ...user, balance: newBalance };\r\n      setUser(updatedUser);\r\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\r\n      console.log(`üíµ Adicionados ‚Ç¨${amount.toFixed(2)}. Novo saldo:`, newBalance);\r\n    } catch (err) {\r\n      console.error(\"‚ùå Erro ao atualizar saldo:\", err);\r\n      alert(\"Erro ao atualizar saldo no Supabase.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, addFunds }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAHA;;;;AAoBA,MAAM,4BAAc,IAAA,oHAAa,EAAkB;IACjD,MAAM;IACN,OAAO,KAAO;IACd,QAAQ,KAAO;IACf,UAAU,KAAO;AACnB;AAEO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAc;IAE9C,IAAA,gHAAS,EAAC;QACR,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,QAAQ,GAAG,CAAC;QACZ,IAAI,WAAW;YACb,MAAM,SAAS,KAAK,KAAK,CAAC;YAC1B,QAAQ,GAAG,CAAC,yBAAyB;YACrC,QAAQ;QACV;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,QAAQ,GAAG,CAAC,8BAA8B;QAC1C,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C;IAEA,MAAM,SAAS;QACb,QAAQ,GAAG,CAAC;QACZ,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,MAAM,WAAW,OAAO;QACtB,QAAQ,GAAG,CAAC,iCAAiC;QAC7C,QAAQ,GAAG,CAAC,qBAAqB;QAEjC,IAAI,CAAC,MAAM;YACT,QAAQ,KAAK,CAAC;YACd,OAAO,MAAM;QACf;QAEA,IAAI,CAAC,KAAK,EAAE,EAAE;YACZ,QAAQ,KAAK,CAAC;YACd,OAAO,MAAM;QACf;QAEA,MAAM,aAAa,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI;QAEzC,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,0HAAQ,CAC7B,IAAI,CAAC,SACL,MAAM,CAAC;gBAAE,SAAS;YAAW,GAC7B,EAAE,CAAC,MAAM,KAAK,EAAE;YAEnB,IAAI,OAAO,MAAM;YAEjB,MAAM,cAAc;gBAAE,GAAG,IAAI;gBAAE,SAAS;YAAW;YACnD,QAAQ;YACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAC5C,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,OAAO,OAAO,CAAC,GAAG,aAAa,CAAC,EAAE;QACnE,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,MAAM;QACR;IACF;IAEA,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;YAAQ;QAAS;kBAC1D;;;;;;AAGP;AAEO,MAAM,UAAU,IAAM,IAAA,iHAAU,EAAC","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/guga0/Gamersclub/gamersclub-frontend/lib/CardContext.tsx"],"sourcesContent":["\"use client\";\r\nimport { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\r\n\r\nexport interface Game {\r\n  id: string;\r\n  title: string;\r\n  price: number;\r\n  image: string;\r\n}\r\n\r\ninterface CartContextType {\r\n  cart: Game[];\r\n  addToCart: (game: Game) => void;\r\n  removeFromCart: (id: string) => void;\r\n  clearCart: () => void;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType>({\r\n  cart: [],\r\n  addToCart: () => {},\r\n  removeFromCart: () => {},\r\n  clearCart: () => {},\r\n});\r\n\r\nexport const CartProvider = ({ children }: { children: ReactNode }) => {\r\n  const [cart, setCart] = useState<Game[]>([]);\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"cart\");\r\n    if (stored) setCart(JSON.parse(stored));\r\n  }, []);\r\n\r\n  const addToCart = (game: Game) => {\r\n    console.log(\"‚ûï Adicionando ao carrinho:\", game);\r\n    const exists = cart.find((g) => g.id === game.id);\r\n    if (!exists) {\r\n      const newCart = [...cart, game];\r\n      setCart(newCart);\r\n      localStorage.setItem(\"cart\", JSON.stringify(newCart));\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (id: string) => {\r\n    const newCart = cart.filter((g) => g.id !== id);\r\n    setCart(newCart);\r\n    localStorage.setItem(\"cart\", JSON.stringify(newCart));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    localStorage.removeItem(\"cart\");\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"names":[],"mappings":";;;;;;;AACA;AADA;;;AAiBA,MAAM,4BAAc,IAAA,oHAAa,EAAkB;IACjD,MAAM,EAAE;IACR,WAAW,KAAO;IAClB,gBAAgB,KAAO;IACvB,WAAW,KAAO;AACpB;AAEO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAS,EAAE;IAE3C,IAAA,gHAAS,EAAC;QACR,MAAM,SAAS,aAAa,OAAO,CAAC;QACpC,IAAI,QAAQ,QAAQ,KAAK,KAAK,CAAC;IACjC,GAAG,EAAE;IAEL,MAAM,YAAY,CAAC;QACjB,QAAQ,GAAG,CAAC,8BAA8B;QAC1C,MAAM,SAAS,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,KAAK,EAAE;QAChD,IAAI,CAAC,QAAQ;YACX,MAAM,UAAU;mBAAI;gBAAM;aAAK;YAC/B,QAAQ;YACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;QAC9C;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,MAAM,UAAU,KAAK,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QAC5C,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C;IAEA,MAAM,YAAY;QAChB,QAAQ,EAAE;QACV,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAW;YAAgB;QAAU;kBACvE;;;;;;AAGP;AAEO,MAAM,UAAU,IAAM,IAAA,iHAAU,EAAC","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/guga0/Gamersclub/gamersclub-frontend/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\nimport Navbar from \"@/components/Navbar\";\nimport { AuthProvider } from \"@/lib/AuthContext\"; // importe o AuthProvider\nimport { CartProvider } from \"@/lib/CardContext\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <CartProvider>\n      <AuthProvider>\n        <Navbar />\n        <main className=\"pt-20\">\n          <Component {...pageProps} />\n        </main>\n      </AuthProvider>\n    </CartProvider>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AAEA;AACA,gMAAkD,yBAAyB;AAC3E;;;;;;AAEe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACE,qKAAC,4HAAY;kBACX,cAAA,qKAAC,4HAAY;;8BACX,qKAAC,yHAAM;;;;;8BACP,qKAAC;oBAAK,WAAU;8BACd,cAAA,qKAAC;wBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;;AAKlC","debugId":null}}]
}